@rem
@rem Author:: Seth Chisamore (<schisamo@opscode.com>)
@rem Copyright:: Copyright (c) 2011 Opscode, Inc.
@rem License:: Apache License, Version 2.0
@rem
@rem Licensed under the Apache License, Version 2.0 (the "License");
@rem you may not use this file except in compliance with the License.
@rem You may obtain a copy of the License at
@rem
@rem     http://www.apache.org/licenses/LICENSE-2.0
@rem
@rem Unless required by applicable law or agreed to in writing, software
@rem distributed under the License is distributed on an "AS IS" BASIS,
@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@rem See the License for the specific language governing permissions and
@rem limitations under the License.
@rem

<%= "SETX HTTP_PROXY \"#{knife_config[:bootstrap_proxy]}\"" if knife_config[:bootstrap_proxy] %>
mkdir C:\chef

> C:\chef\wget.vbs (
 <%= win_wget %>
)

@rem Install Chef using chef-client MSI installer
@setlocal

@set REMOTE_SOURCE_MSI_URL=https://www.opscode.com/chef/install.msi
@set LOCAL_DESTINATION_MSI_PATH=%TEMP%\chef-client-latest.msi
@set FALLBACK_QUERY_STRING=?DownloadContext=PowerShell

@set ALTERNATE_DOWNLOAD_COMMAND=$webClient=new-object System.Net.WebClient; $webClient.DownloadFile('%REMOTE_SOURCE_MSI_URL%%FALLBACK_QUERY_STRING%', '%LOCAL_DESTINATION_MSI_PATH%')

cscript /nologo C:\chef\wget.vbs /url:%REMOTE_SOURCE_MSI_URL% /path:"%LOCAL_DESTINATION_MSI_PATH%"

@rem Work around issues found in Windows Server 2012 around job objects not respecting WSMAN memory quotas
@rem that cause the MSI download process to exceed the quota even when it is increased by administrators.
@rem Retry the download using a more memory-efficient mechanism that only works if PowerShell is available.
@if ERRORLEVEL 1 (      
    echo Warning: Failed to download %REMOTE_SOURCE_MSI_URL% to %LOCAL_DESTINATION_MSI_PATH%
    echo Warning: Retrying download with PowerShell if available
    if EXIST "%LOCAL_DESTINATION_MSI_PATH%" del /f /q "%LOCAL_DESTINATION_MSI_PATH%"
    echo powershell -noprofile -noninteractive -command "%ALTERNATE_DOWNLOAD_COMMAND%"
    powershell -noprofile -noninteractive -command "%ALTERNATE_DOWNLOAD_COMMAND%"
    if NOT ERRORLEVEL 1 (
        echo Download succeeded
    ) else (
        echo Failed to download %REMOTE_SOURCE_MSI_URL%
        echo Subsequent attempt to install the downloaded MSI is likely to fail
    )
)

msiexec /qb /i "%LOCAL_DESTINATION_MSI_PATH%"

@endlocal

> C:\chef\validation.pem (
 <%= validation_key %>
)

<% if @config[:encrypted_data_bag_secret] -%>
> C:\chef\encrypted_data_bag_secret (
 <%= encrypted_data_bag_secret %>
)
<% end -%>

> C:\chef\client.rb (
 <%= config_content %>
)

> C:\chef\first-boot.json (
 <%= run_list %>
)

<%= start_chef %>

